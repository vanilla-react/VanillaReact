// <auto-generated />
using VanillaReact.Api.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace VanillaReact.Api.Migrations
{
  [DbContext(typeof(ApplicationDbContext))]
  partial class ApplicationDbContextModelSnapshot : ModelSnapshot
  {
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
      modelBuilder
          .HasAnnotation("ProductVersion", "5.0.4");

      modelBuilder.Entity("Api.Models.Category", b =>
          {
            b.Property<int>("CategoryId")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("INTEGER");

            b.Property<string>("Name")
                      .HasColumnType("TEXT");

            b.HasKey("CategoryId");

            b.ToTable("Categories");
          });

      modelBuilder.Entity("Api.Models.Feedback", b =>
          {
            b.Property<int>("FeedbackId")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("INTEGER");

            b.Property<int>("AuthorId")
                      .HasColumnType("INTEGER");

            b.Property<string>("Content")
                      .HasColumnType("TEXT");

            b.Property<int>("SnippetId")
                      .HasColumnType("INTEGER");

            b.HasKey("FeedbackId");

            b.HasIndex("AuthorId");

            b.HasIndex("SnippetId");

            b.ToTable("Feedback");
          });

      modelBuilder.Entity("Api.Models.Kudo", b =>
          {
            b.Property<int>("SnippetId")
                      .HasColumnType("INTEGER");

            b.Property<int>("AuthorId")
                      .HasColumnType("INTEGER");

            b.HasKey("SnippetId", "AuthorId");

            b.HasIndex("AuthorId");

            b.ToTable("Kudo");
          });

      modelBuilder.Entity("Api.Models.Snippet", b =>
          {
            b.Property<int>("SnippetId")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("INTEGER");

            b.Property<int>("AuthorId")
                      .HasColumnType("INTEGER");

            b.Property<string>("Content")
                      .HasColumnType("TEXT");

            b.Property<string>("Slug")
                      .HasColumnType("TEXT");

            b.Property<int>("Status")
                      .HasColumnType("INTEGER");

            b.Property<string>("Title")
                      .HasColumnType("TEXT");

            b.HasKey("SnippetId");

            b.HasIndex("AuthorId", "Title")
                      .IsUnique();

            b.ToTable("Snippets");
          });

      modelBuilder.Entity("Api.Models.User", b =>
          {
            b.Property<int>("UserId")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("INTEGER");

            b.Property<string>("Email")
                      .HasColumnType("TEXT");

            b.Property<string>("Nickname")
                      .HasColumnType("TEXT");

            b.HasKey("UserId");

            b.HasIndex("Email")
                      .IsUnique();

            b.ToTable("Users");
          });

      modelBuilder.Entity("CategorySnippet", b =>
          {
            b.Property<int>("CategoriesCategoryId")
                      .HasColumnType("INTEGER");

            b.Property<int>("SnippetsSnippetId")
                      .HasColumnType("INTEGER");

            b.HasKey("CategoriesCategoryId", "SnippetsSnippetId");

            b.HasIndex("SnippetsSnippetId");

            b.ToTable("CategorySnippet");
          });

      modelBuilder.Entity("Api.Models.Feedback", b =>
          {
            b.HasOne("Api.Models.User", "Author")
                      .WithMany()
                      .HasForeignKey("AuthorId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();

            b.HasOne("Api.Models.Snippet", "Snippet")
                      .WithMany("FeedbackItems")
                      .HasForeignKey("SnippetId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();

            b.Navigation("Author");

            b.Navigation("Snippet");
          });

      modelBuilder.Entity("Api.Models.Kudo", b =>
          {
            b.HasOne("Api.Models.User", "Author")
                      .WithMany("Kudos")
                      .HasForeignKey("AuthorId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();

            b.HasOne("Api.Models.Snippet", "Snippet")
                      .WithMany("Kudos")
                      .HasForeignKey("SnippetId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();

            b.Navigation("Author");

            b.Navigation("Snippet");
          });

      modelBuilder.Entity("Api.Models.Snippet", b =>
          {
            b.HasOne("Api.Models.User", "Author")
                      .WithMany("Snippets")
                      .HasForeignKey("AuthorId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();

            b.Navigation("Author");
          });

      modelBuilder.Entity("CategorySnippet", b =>
          {
            b.HasOne("Api.Models.Category", null)
                      .WithMany()
                      .HasForeignKey("CategoriesCategoryId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();

            b.HasOne("Api.Models.Snippet", null)
                      .WithMany()
                      .HasForeignKey("SnippetsSnippetId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();
          });

      modelBuilder.Entity("Api.Models.Snippet", b =>
          {
            b.Navigation("FeedbackItems");

            b.Navigation("Kudos");
          });

      modelBuilder.Entity("Api.Models.User", b =>
          {
            b.Navigation("Kudos");

            b.Navigation("Snippets");
          });
#pragma warning restore 612, 618
    }
  }
}
